@model WebApplication2.Models.Idea

@{
    ViewBag.Title = "Details ideas";
}
@using WebApplication2.Models;
@using Microsoft.AspNet.Identity;
@{ ApplicationDbContext db = new ApplicationDbContext();
    Submission submission = db.Submissions.Where(x => x.Open_date <= DateTime.Now && DateTime.Now <= x.Closure_date).FirstOrDefault();
    ViewBag.Submission = submission;
    }


<div>

    <hr />
    <dl class="dl-horizontal card-cus-1">
        <!--mỗi cái <dt> và <dd> tượng trưng cho 1 hàng-->
        <center><h2>Title : @Model.IdeaTitle</h2></center>
        <h2>

        </h2>
      
        @if (User.Identity.GetUserId() == Model.Author.Id&&Model.Submission.SubId==ViewBag.Submission.SubId)
        {
            using (Html.BeginForm("Edit", "Ideas", FormMethod.Post, new { id = "form-update" }))
            {
                @Html.AntiForgeryToken()
                <dt>Title :</dt>
                <dd>
                    @Html.TextBoxFor(model => model.IdeaTitle, new { @class = "form-control" })
                    @Html.HiddenFor(model => model.IdeaId)
                </dd>
                <dt>
                    Description :
                </dt>

                <dd>
                    @Html.TextBoxFor(model => model.IdeaDescription, new { @class = "form-control" })
                </dd>

                <dt>
                    Content :
                </dt>

                <dd>

                    @Html.TextAreaFor(model => model.IdeaContent, new { @class = "form-control" })
                    



                </dd>
                <dt>
                    Category
                </dt>
                <dd>
                    @Html.DropDownList("Categories", null, htmlAttributes: new { @class = "form-control" })
                </dd>
                <dt>

                </dt>
                <dd>
                    <input class="btn btn-success" form="form-update" type="submit" value="Save">

                </dd>

            }
        }
        else
        {
            <dt>Title :</dt>
            <dd>
                @Html.DisplayFor(model => model.IdeaTitle)
            </dd>
            <dt>
                Description :
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IdeaDescription)
            </dd>

            <dt>
                Content :
            </dt>

            <dd>


                @Html.TextAreaFor(model => model.IdeaContent, new { @class = "form-control", @readonly = "true" })



            </dd>
        }

        <dt>
            Author :
        </dt>

        <dd>

            <div class="row">
                <div class="col-md-5">  @Html.DisplayFor(model => model.Author.UserName)</div>
                <div class="col-md-7">
                    @if (User.Identity.GetUserId() == Model.Author.Id&&Model.Submission==ViewBag.Submission )
                    {
                        <div class="form-inline">

                            <!--phần file-->
                            @using (Html.BeginForm("UploadFile", "Ideas", FormMethod.Post, new { enctype = "multipart/form-data", id = "form-file" }))
                            {
                                <strong>File : </strong>
                                <input style="display:none" type="number" name="IdeaId" id=@Model.IdeaId value=@Model.IdeaId />
                                <div class="form-group">
                                    <div class="col-md-5">
                                        <input type="file" name="file" class="form-control" />
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-7">
                                        <input type="submit" form="form-file" value="Upload" class="btn btn-default" />
                                    </div>
                                </div>

                            }
                        </div>




                    }
                    @{
                        List<Document> documents = ViewBag.documents;
                    }
                    @if (documents.Where(x => x.Idea == Model).ToList().Count != 0)
                    {
                        <center style="margin-top:10px;">
                            @Html.ActionLink("Get File", "GetFile", "Ideas", new { IdeaId = Model.IdeaId }, new { @class = "btn btn-info" })
                            @if (User.Identity.GetUserId() == Model.Author.Id)
                            {
                                @Html.ActionLink("Delete File", "DeleteFile", "Ideas", new { IdeaId = Model.IdeaId }, new { @class = "btn btn-danger" })
                            }

                        </center>

                    }



                </div>
            </div>




        </dd>
        <dt>
            Category :
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Category.CateName)
        </dd>
        <dt>
            Department :
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Department.DepartName)
        </dd>
        <dt>
            Submission :
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Submission.SubName)
            (@Model.Submission.Open_date.ToShortDateString() - @Model.Submission.Closure_date.ToShortDateString() )
        </dd>
        <dt>
            Created date :
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created_date)
            <strong>| Last modified :   </strong>@Html.DisplayFor(model => model.Last_modified)
        </dd>

        <dt>

        </dt>

        <dd>

            <hr />
        </dd>


        <dt>

            Comment :
        </dt>
        <dd>

            <!--phần comment-->

            <div class="row">
                <div class="col-md-6"> <a onclick="ChangeToComment(@Model.IdeaId)">Comment on this idea</a></div>
                <div class="col-md-6">

                    <!--nút like-->
                    @using (Html.BeginForm("React", "Ideas", FormMethod.Post))
                    {
                        {
                            <input style="display:none" type="number" name="IdeaId" id=@Model.IdeaId value=@Model.IdeaId />

                            Idea idea = db.Ideas.Find(Model.IdeaId);
                            ApplicationUser user = db.Users.Find(User.Identity.GetUserId());
                            List<Reaction> reactions = db.Reactions.ToList();
                            //Đã react

                            if (reactions.Where(x => x.User == user && x.Idea == idea).ToList().Count != 0)
                            {
                                bool react = reactions.Where(x => x.User == user && x.Idea == idea).ToList()[0].React;
                                if (react)
                                {//React là like
                                    <button name="React" style="width:100px;" class="btn btn-primary" value="null"><i class="fa fa-thumbs-up"></i> Like</button>
                                }
                                else
                                {
                                    <button name="React" style="width:100px;" class="btn btn-default" value="1"><i class="fa fa-thumbs-o-up"></i> Like</button>
                                }
                            }
                            else
                            //chưa react
                            {
                                <button name="React" style="width:100px;" class="btn btn-default" value="1"><i class="fa fa-thumbs-o-up"></i> Like</button>
                            }

                        }

                    }
                    <!--nút dislike-->
                    @using (Html.BeginForm("React", "Ideas", FormMethod.Post))
                    {
                        {
                            <input style="display:none" type="number" name="IdeaId" id=@Model.IdeaId value=@Model.IdeaId />
                            Idea idea = db.Ideas.Find(Model.IdeaId);
                            ApplicationUser user = db.Users.Find(User.Identity.GetUserId());
                            List<Reaction> reactions = db.Reactions.ToList();
                            //Đã react
                            if (reactions.Where(x => x.User == user && x.Idea == idea).ToList().Count != 0)
                            {
                                bool react = reactions.Where(x => x.User == user && x.Idea == idea).ToList()[0].React;
                                if (!react)
                                {//React là unlike
                                    <button name="React" style="width: 100px; margin-top: 5px;" class="btn btn-danger" value="null"><i class="fa fa-thumbs-down"></i> Dislike</button>
                                }
                                else
                                {
                                    <button name="React" style="width: 100px; margin-top: 5px;" class="btn btn-default" value="0"><i class="fa fa-thumbs-o-down"></i> Dislike</button>
                                }
                            }
                            else
                            //chưa react
                            {
                                <button name="React" style="width:100px;margin-top:5px;" class="btn btn-default" value="0"><i class="fa fa-thumbs-o-down"></i> Dislike</button>
                            }

                        }



                    }

                </div>


            </div>

            <hr />
            <!--phần hiện comment-->
            <div class="card-cus-1">
                <!--phần này bắt đầu show tất cả comment-->
                @foreach (Comment comment in Model.Comments)
                {
                    <div class="row">
                        <div class="col-md-2">
                            <i style="font-size:50px;" class="fa fa-user" aria-hidden="true"></i>
                        </div>
                        <div class="col-md-10">
                            <div>
                                @if (comment.Anonymous)
                                {
                                    //hiện tên ng đăng
                                    <div>
                                        Anonymous - <a onclick="ChangeToReply(@comment.CommentId)">Reply</a>
                                    </div>

                                    <div>
                                        @comment.Content
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        @comment.Author.UserName -  <a onclick="ChangeToReply(@comment.CommentId)">Reply</a>
                                    </div>

                                    <div>
                                        @comment.Content
                                    </div>
                                }
                                @if (comment.Author.Id == User.Identity.GetUserId())
                                {
                                    @Html.ActionLink("Edit |", "Edit", "Comments", new { id = comment.CommentId }, null)
                                    @Html.ActionLink(" Delete", "Delete", "Comments", new { id = comment.CommentId }, null)
                                }

                                <!--hiện content của comment-->
                                <!--chuyển thành trả lời comment-->

                                <hr />
                            </div>
                        </div>

                    </div>
                    //phần này hiện reply của comment
                    @RecursionComment(comment);
                    @helper RecursionComment(Comment comment1)
                    {
                        <div>
                            @foreach (Comment reply in comment1.Replys)
                            {
                                <div style="margin-left:25px;">
                                    <div class="row">
                                        <div class="col-md-2">
                                            <i style="font-size:50px;" class="fa fa-user" aria-hidden="true"></i>
                                        </div>
                                        <div class="col-md-10">
                                            <div>
                                                @if (!reply.Anonymous)
                                                {
                                                    //tên ng comment

                                                    <div>@reply.Author.UserName - <a onclick="ChangeToReply(@reply.CommentId)">Reply</a></div>
                                                    <div>@reply.Content</div>
                                                }
                                                else
                                                {
                                                    <div>Anonymous - <a onclick="ChangeToReply(@reply.CommentId)">Reply</a></div>
                                                    <div>@reply.Content</div>
                                                }

                                            </div>
                                            @if (reply.Author.Id == User.Identity.GetUserId())
                                            {
                                                @Html.ActionLink("Edit |", "Edit", "Comments", new { id = reply.CommentId }, null)
                                                @Html.ActionLink(" Delete", "Delete", "Comments", new { id = reply.CommentId }, null)
                                            }


                                        </div>

                                    </div>

                                    <!--content-->
                                    <!--chuyển thành trả lời comment-->

                                    <hr />
                                    @if (reply.Replys.Count != 0)
                                    {
                                        @RecursionComment(reply);
                                    }

                                </div>
                            }

                        </div>




                    }


                }
                <!--khung để viết comment-->
                @if (Model.Submission.Open_date <= DateTime.Now && DateTime.Now <= Model.Submission.Final_closure_date)
                {
                    using (Html.BeginForm("Comment", "Ideas", FormMethod.Post))
                    {

                        <div class="form-inline">
                            <input class="form-control" type="text" name="Comment" placeholder="Enter Comment" />
                            <input class="btn btn-success" type="submit" value="Comment" />
                        </div>


                        <input style="display:none" type="number" name="CommentId" id=@Model.IdeaId value=0 />
                        <input style="display:none" type="number" name="IdeaId" id=@Model.IdeaId value=@Model.IdeaId />



                        <div class="form-inline">
                            @Html.CheckBox("Anonymous", new { htmlAttributes = new { @class = "form-control" } })
                            Post this comment anonymously?
                        </div>

                    }
                }
            </div>


        </dd>

        <dt>
            Reaction list :
        </dt>
        <dd>
            <p>
                <!--số lượt like-->
                Like : @Model.Reactions.Where(x => x.React).Count()
            </p>
            <p>
                <!--số lượt dislike-->
                Dislike :@Model.Reactions.Where(x => x.React == false).Count()
            </p>
            <br />
            <!--hiện thông tin của người like hoặc dislike-->
            @foreach (Reaction reaction in Model.Reactions)
            {


                if (reaction.React)
                {<div>
                        @reaction.User.UserName : Like
                    </div>

                }
                else
                {
                    <div>
                        @reaction.User.UserName : Dislike
                    </div>

                }

            }
            <hr />
        </dd>
        <dt>
            View Count :
        </dt>
        <dd>
            <!--số lượt view-->
            @Model.Views.Count()
        </dd>
        <dt>
            View list :
        </dt>
        <dd>
            <!--hiện thông tin người đã xem idea-->
            @foreach (View view in Model.Views)
            {
                if (view.User != null)
                {
                    <p>
                        User : @view.User.UserName : Last seen : @view.Last_visited
                    </p>
                }

            }

        </dd>
    </dl>



</div>
<p>
    @Html.ActionLink("Delete", "Delete", new { id = Model.IdeaId }, new { @class = "btn btn-danger" }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@section scripts{
    <script src="~/Scripts/JavaScript.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <!--https://fontawesome.com/v4/icons/-->
    <link href="~/Content/Style.css" rel="stylesheet" />
}